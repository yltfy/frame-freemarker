<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
  http://www.springframework.org/schema/beans/spring-beans.xsd  
  http://www.springframework.org/schema/aop   
  http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
  http://www.springframework.org/schema/tx   
  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
  http://www.springframework.org/schema/context   
  http://www.springframework.org/schema/context/spring-context-4.0.xsd
  http://www.springframework.org/schema/util
  http://www.springframework.org/schema/util/spring-util-4.0.xsd
  ">
  
  <!-- 导入包 -->
  <context:component-scan base-package="com.tz.dao"></context:component-scan>
  <context:component-scan base-package="com.tz.service"></context:component-scan>
  
  <!-- 引入数据库连接资源文件 -->
  <bean class="com.tz.core.des.EncryptPropertyPlaceholderConfigurer" p:location="classpath:properties/jdbc.properties" p:fileEncoding="utf-8" />
  
  <!-- proxool数据连接池 -->
  <bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<!-- 驱动的名字，mysql -->
		<property name="driver" value="${db.driver}"></property>
		<!--proxool 的 url连接串，这个必须确定用户名和密码 -->
		<property name="driverUrl" value="${db.url}"></property>
		<!-- 用户名(proxool没有使用，但是不能没有) -->
		<property name="user" value="${db.username}"></property>
        <!-- 密码(proxool没有使用，但是不能没有) -->
		<property name="password" value="${db.password}"></property>
		<!-- proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁 现在设置为4秒） -->
		<property name="houseKeepingSleepTime" value="10000"></property><!-- 自动检查连接是否断掉开关 -->
		<property name="testBeforeUse" value="true"></property>
		<!--  如果发现了空闲的数据库连接.house keeper 将会用这个语句来测试.这个语句最好非常快的被执行.如果没有定义,测试过程将会被忽略 -->
		<property name="houseKeepingTestSql" value="select count(1) from dual"></property>
		<!--  如果housekeeper 检测到某个线程的活动时间大于这个数值.它将会杀掉这个线程.所以确认一下你的服务器的带宽.然后定一个合适的值.默认是5分钟. 现在设置 10 秒--> 
		<property name="maximumActiveTime" value="10000"></property>
		<!-- 最少保持的空闲连接数 （现在设置20个） -->
		<property name="prototypeCount" value="20"></property>
		<!-- 最大连接数 （现在设置100个） -->
		<property name="maximumConnectionCount" value="100"></property>
		<!-- 最小连接数 （现在设置50个） -->
		<property name="minimumConnectionCount" value="50"></property>
		<!-- 如果为true,那么每个被执行的SQL语句将会在执行期被log记录(DEBUG LEVEL).你也可以注册一个ConnectionListener (参看ProxoolFacade)得到这些信息. -->
		<property name="trace" value="false"></property>
		<property name="verbose" value="true"></property>
	</bean>
	
	<!-- 初始化mybatis文件  导入mybatis-spring-1.2.jar包和mybatis.jar包-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource" p:typeAliasesPackage="com.tz.bean"  p:configLocation="classpath:mybatis-config.xml"
		p:mapperLocations="classpath:com/tz/dao/**/*.xml" >
	</bean>
	
	<!-- 初始化mybatis的模板 ，如果使用mapper就可以不需要使用模板，和下面的二选一-->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	 
	<!-- mybatis的mapper转换器 也就是说的接口，里面原理是采用的jdk的动态代理实现的 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.tz.dao"></property>
	</bean>
	
	<!-- mybatis的事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource" />
	<!-- 支持注解形式的拦截器 动态代理模式-->
	<!-- <aop:aspectj-autoproxy proxy-target-class="false"/>	 -->
	<!-- 事务拦截器-->
 	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" read-only="false" propagation="REQUIRED" />
			<tx:method name="add*" read-only="false" propagation="REQUIRED" />
			<tx:method name="create*" read-only="false" propagation="REQUIRED" />
			<tx:method name="update*" read-only="false" propagation="REQUIRED" />
			<tx:method name="merge*" read-only="false" propagation="REQUIRED" />
			<tx:method name="del*" read-only="false" propagation="REQUIRED" />
			<tx:method name="delete*" read-only="false" propagation="REQUIRED" />
			<tx:method name="remove*" read-only="false" propagation="REQUIRED" />
			
			<tx:method name="find*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="get*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="load*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="list*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="count*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="search*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="*" read-only="true" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="interceptorPointCuts" expression="execution (* com.tz.service..*.*(..))" />
		<aop:advisor pointcut-ref="interceptorPointCuts" advice-ref="txAdvice" />
	</aop:config>
	
	<!-- com.tz.core.freemaker.TzFreemakerInitManager -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/pages/" />
        <property name="freemarkerSettings">
            <props>
            	<!-- template_update_delay:模板更新的时长 单位是秒-->
                <prop key="template_update_delay">1</prop>  
                <prop key="tag_syntax">auto_detect</prop><!-- square_bracket|auto_detect设置标签类型 两种：[] 和 <> 。[] 这种标记解析要快些 -->  
                <prop key="default_encoding">UTF-8</prop>  
                <prop key="output_encoding">UTF-8</prop>  
                <prop key="locale">zh_CN</prop>  
                <prop key="date_format">yyyy-MM-dd</prop>  
                <prop key="time_format">HH:mm:ss</prop>  
                <prop key="boolean_format">true,false</prop>
                <prop key="whitespace_stripping">true</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>  
                <prop key="number_format">#.###</prop><!-- 设置数字格式 以免出现 000.00 -->  
                <prop key="classic_compatible">true</prop><!-- 可以满足一般需要。默认情况变量为null则替换为空字符串，如果需要自定义，写上${empty!"EmptyValue of fbysss"}的形式即可  -->  
<!--            <prop key = "template_exception_handler">com.tz.core.FreemarkerExceptionHandler</prop>   -->
	            <prop key="template_exception_handler">html_debug</prop><!--  ignore,debug,html_debug,rethrow-->
            </props>
        </property>
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>
</beans>